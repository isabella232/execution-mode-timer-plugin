buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPluginVersion"
    }
}

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"

group "com.rundeck.plugin"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

configurations{
    //define libs needed to be bundled into the WEB-INF/lib dir of the war
    exportedLibs
    compile{
        extendsFrom exportedLibs
    }
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}


dependencies {

    compile "org.rundeck:rundeck-core:${rundeckVersion}"

    compile 'org.quartz-scheduler:quartz:2.3.1'
    compile 'org.grails.plugins:quartz:2.0.13'

    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    compile "org.codehaus.groovy:groovy-dateutil:$groovyVersion"

    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    provided "com.bertramlabs.plugins:asset-pipeline-grails:$assetPluginVersion"

    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.mockito:mockito-core"
    testCompile "org.grails:grails-web-testing-support"
}

bootRun {
    ignoreExitValue true
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}
// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false

assets {
    minifyJs = false
    minifyCss = false
    verbose = true
    packagePlugin = project.findProperty('packagePlugin')?: false
    configOptions = [commonJs:false]

    includes = ['**/*.js', '**/*.css', '**/*.png', '**/*.svg']
}
